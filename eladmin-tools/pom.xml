<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>eladmin</artifactId>
        <groupId>me.zhengjie</groupId>
        <version>2.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>eladmin-tools</artifactId>

    <properties>
        <mail.version>1.4.7</mail.version>
        <qiniu.version>[7.2.0, 7.2.99]</qiniu.version>
        <alipay.version>3.1.0</alipay.version>
    </properties>

    <dependencies>
        <!-- 同时需要common模块和logging模块只需要引入logging模块即可 -->
        <dependency>
            <groupId>me.zhengjie</groupId>
            <artifactId>eladmin-logging</artifactId>
            <version>2.0</version>
        </dependency>

        <!--邮件依赖-->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>${mail.version}</version>
        </dependency>

        <!--七牛云存储-->
        <dependency>
            <groupId>com.qiniu</groupId>
            <artifactId>qiniu-java-sdk</artifactId>
            <version>${qiniu.version}</version>
        </dependency>
        <!--七Lombok - 是一个可以通过简单的注解形式来帮助我们简化消除一些必须有但显得很臃肿的Java代码的工具，
			通过使用对应的注解，可以在编译源码的时候生成对应的方法。简单试了以下这个工具还挺好玩的，
			加上注解我们就不用手动写 getter\setter、构建方式类似的代码了。
        <dependency>
		   <groupId>org.projectlombok</groupId>
		   <artifactId>lombok</artifactId>
		</dependency> -->

        <!--支付宝依赖-->
        <dependency>
            <groupId>com.alipay.sdk</groupId>
            <artifactId>alipay-sdk-java</artifactId>
            <version>${alipay.version}</version>
        </dependency>
    </dependencies>
</project>